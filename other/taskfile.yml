version: "3"



vars:
  CONFIG_DIR: { sh: echo "$(git rev-parse --show-toplevel)/config" }
  KUBECONFIG_DIR: '{{.CONFIG_DIR}}/.kube'
  CREDENTIALS_DIR: '{{.CONFIG_DIR}}/credentials'

tasks:
  default:
    deps: [ format, docs ]

  format:
    summary: Format Terraform files
    desc: Format Terraform files
    silent: true
    cmd: terraform fmt  -recursive -write=true

  docs:
    summary: Update Terraform docs
    desc: Update Terraform docs
    silent: true
    cmd: "find . -type f -name main.tf | while read file; do DIR=\"$(dirname $file)\"; \n
      { terraform-docs markdown table --output-file README.md --output-mode inject \"$DIR\"; } || { echo \"Failed to update: $DIR\";  } \n
      done"


  encrypt:
    summary: Encrypt configs
    precondition: 'test -f ./config/sops.json'
    silent: true
    # sources: [./config/*.json]
    vars:
      SOPS_ARGS:
        sh: echo "--azure-kv \"$(cat {{.CONFIG_DIR}}/sops.json | jq -r '.key_url')\""
    cmds:
      # - echo {{.CREDENTIALS_DIR}} {{.KUBECONFIG_DIR}}
      - if [ -d "{{.CREDENTIALS_DIR}}" ]; then
        find "{{.CREDENTIALS_DIR}}" -type f -name '*.json'   -not -iwholename '*.enc.*' | while read f; do sops {{.SOPS_ARGS}} -e "$f" > "${f//.json/.enc.json}";
        done; fi
      - if [ -d "{{.KUBECONFIG_DIR}}" ]; then
        find "{{.KUBECONFIG_DIR}}" -type f -name '*.config' -not -iwholename '*.enc.*' | while read f; do sops {{.SOPS_ARGS}} -e "$f" > "${f//.config/.enc.config}";
        done; fi

  decrypt:
    summary: Decrypt configs
    silent: true
    cmds:
      - if [ -d "{{.CREDENTIALS_DIR}}" ]; then
        find "{{.CREDENTIALS_DIR}}" -type f -name '*.enc.json'  | while read f; do sops {{.SOPS_ARGS}} -d "$f" > "${f//.enc.json/.json}";
        done; fi
      - if [ -d "{{.KUBECONFIG_DIR}}" ]; then
        find "{{.KUBECONFIG_DIR}}" -type f -name '*.enc.config' | while read f; do sops {{.SOPS_ARGS}} -d "$f" > "${f//.enc.config/.config}";
        done; fi
